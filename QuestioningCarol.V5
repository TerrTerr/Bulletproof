<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Improv Comedy Scene</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap');
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
            margin: 0;
            padding-top: 20px; /* Added margin above the container */
        }
        .container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 80%;
            max-width: 800px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }
        .content {
            display: flex;
            width: 100%;
            flex-direction: column;
            align-items: center;
            margin-top: 20px;
        }
        .buttons-container {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }
        .buttons-container button {
            font-size: 18px;
            padding: 15px 30px;
            border: none;
            color: white;
            cursor: pointer;
            margin: 10px;
            border-radius: 5px;
        }
        #suggestionButton {
            background-color: green;
            padding: 15px 30px;
        }
        #wipeButton {
            background-color: red;
            padding: 15px 30px;
        }
        #button-button {
            background-color: green;
            color: white;
            padding: 15px 30px;
        }
        #suggestion {
            font-size: 24px;
            margin-top: 20px;
            text-align: center;
        }
        #chat-container {
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            height: 400px;
            overflow-y: auto;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: #fafafa;
            width: 100%;
        }
        .message {
            border-radius: 20px;
            padding: 10px 15px;
            margin: 5px 0;
            max-width: 75%;
            word-wrap: break-word;
            font-size: 18px;
        }
        .user-message {
            background-color: #007bff;
            color: white;
            align-self: flex-end;
        }
        .assistant-message {
            background-color: #00ffff;
            color: black;
            align-self: flex-start;
        }
        #user-input-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 10px;
            width: 100%;
        }
        #user-input {
            width: 100%;
            padding: 10px;
            font-size: 18px;
            border: 1px solid #ccc;
            border-radius: 20px;
            margin-bottom: 10px;
        }
        #buttons-container {
            display: flex;
            justify-content: center;
            width: 100%;
        }
        #send-button, #button-button, #wipeButton {
            padding: 10px;
            font-size: 18px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            margin: 5px;
        }
        #send-button {
            background-color: #007bff;
            color: white;
        }
        #wipeButton {
            background-color: red;
            color: white;
        }
        .toggle-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }
        .toggle-buttons {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .toggle-buttons label {
            cursor: pointer;
            padding: 10px 20px;
            border: 1px solid #ccc;
            margin-bottom: 5px;
            border-radius: 5px;
            font-size: 18px;
        }
        .toggle-buttons input[type="checkbox"] {
            display: none;
        }
        .toggle-buttons input[type="checkbox"]:checked + label {
            background-color: blue;
            color: white;
        }
        #download-button {
            background-color: #3b5998;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            margin-top: 20px;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
</head>
<body>
    <div class="container" id="scene-container">
        <div class="content">
            <div class="toggle-container">
                <div class="toggle-buttons">
                    <input type="checkbox" id="userToggle" checked>
                    <label for="userToggle">You Initiate</label>
                    <input type="checkbox" id="carolToggle">
                    <label for="carolToggle">Questioning Carol Initiates</label>
                </div>
            </div>
            <div class="buttons-container">
                <button id="suggestionButton">Suggestion</button>
            </div>
        </div>
        <p id="suggestion"></p>
        <div id="chat-container"></div>
        <div id="user-input-container">
            <input type="text" id="user-input" placeholder="Type your dialogue here...">
            <div id="buttons-container">
                <button id="send-button">Send</button>
                <button id="button-button">Button</button>
                <button id="wipeButton">Wipe</button>
            </div>
        </div>
    </div>
    <button id="download-button">Download My Scene</button>
    <script>
        let suggestions = [];
        let initialPrompt;
        let startTime;
        let isPendingResponse = false;

        document.addEventListener('DOMContentLoaded', function() {
            fetch('https://raw.githubusercontent.com/TerrTerr/Initiation_Practice2/main/suggestions.csv')
                .then(response => response.text())
                .then(data => {
                    suggestions = data.split('\n').slice(1).map(line => line.trim());
                })
                .catch(error => console.error('Error fetching suggestions:', error));

            document.getElementById('suggestionButton').addEventListener('click', function() {
                if (suggestions.length > 0) {
                    const randomIndex = Math.floor(Math.random() * suggestions.length);
                    const suggestion = suggestions[randomIndex];
                    document.getElementById('suggestion').innerText = suggestion.charAt(0).toUpperCase() + suggestion.slice(1);
                    initialPrompt = `Act As a comedic improviser playing a character in a comedy scene. The User will Act As the other character in the scene. Be sure to always Act As your character and never as the User's character. Have a tendency to ask questions as often as every other line. Follow all other improv best practices by playing grounded, being pithy, listening and responding/reacting to the User's contributions, help establish where the scene is happening and between who. Mix some statements in between your questions. The best questions are open-ended. Begin the conversation with an open-ended question. Here is the suggestion: ${suggestion}`;
                    startTime = new Date();
                    if (document.getElementById('carolToggle').checked) {
                        sendMessage(suggestion, false);
                    }
                } else {
                    console.log('No suggestions available');
                }
            });

            document.getElementById('wipeButton').addEventListener('click', function() {
                document.getElementById('chat-container').innerHTML = '';
                document.getElementById('suggestion').innerText = '';
                document.getElementById('user-input').value = '';
            });

            const trimResponse = (response) => {
                response = response.replace(/\n/g, ' ');
                response = response.replace(/[^ ]+:/g, '');
                const sentences = response.match(/[^.!?]+[.!?]+/g) || [response];
                const titles = ["Mr.", "Mrs.", "Ms.", "Dr.", "Prof.", "Esq."];
                if (sentences.length > 1) {
                    return sentences.filter((sentence) => !titles.some((title) => sentence.includes(title)))[0];
                }
                return response;
            };

            const removeImprovWord = (text) => {
                return text.replace(/\bImprov\b/g, '');
            };

            const sendMessage = async (message, displayMessage = true
